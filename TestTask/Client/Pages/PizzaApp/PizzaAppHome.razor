@page "/PizzaApp/Home"
@inject HttpClient http
<MudGrid Class="pt-3" Spacing="4">
   @if(pizzaSpecials is null)
    {
        <MudItem xs="12">
            <MudProgressCircular style="text-align:center" Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
        </MudItem>
    }
    else
    {
        @foreach(var p in pizzaSpecials)
        {
            <MudItem xs="6" sm="4">

                <MudCard Elevation="6">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@p.Name</MudText>

                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
                            <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardMedia Image="@GetImageUrl(@p)" Height="160" />
                    <MudCardContent>
                        
                        <MudText Typo="Typo.body2">@p.Description.</MudText>
                        <MudText Typo="Typo.subtitle1" Align="Align.Right" Class="mt-2"><b class="bold-face">@string.Format("${0:0.00}",p.BasePrice)</b></MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudSpacer />
                        <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.AddShoppingCart" Color="Color.Primary">Add to cart</MudIconButton>
                        &nbsp;
                        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ShoppingCartCheckout" Color="Color.Success">Buy</MudButton>
                    </MudCardActions>
                </MudCard>
                @*</MudPaper>*@
            </MudItem>
        }
    }

           
    
</MudGrid>
@code {
    int _count { get; set; }
    private IEnumerable<PizzaSpecial>? pizzaSpecials;
    protected override async Task OnInitializedAsync()
    {
        pizzaSpecials = await this.http.GetFromJsonAsync<IEnumerable<PizzaSpecial>>("api/Pizzas");
        this._count = pizzaSpecials.Count();
    }
    public string GetImageUrl(PizzaSpecial p)
    {
        return $"Images/{p.ImageUrl}";
    }
}
